// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netlify/terraform-provider-netlify/internal/models"
)

// ShowTicketReader is a Reader for the ShowTicket structure.
type ShowTicketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowTicketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShowTicketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewShowTicketDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewShowTicketOK creates a ShowTicketOK with default headers values
func NewShowTicketOK() *ShowTicketOK {
	return &ShowTicketOK{}
}

/*
ShowTicketOK describes a response with status code 200, with default header values.

ok
*/
type ShowTicketOK struct {
	Payload *models.Ticket
}

// IsSuccess returns true when this show ticket o k response has a 2xx status code
func (o *ShowTicketOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this show ticket o k response has a 3xx status code
func (o *ShowTicketOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this show ticket o k response has a 4xx status code
func (o *ShowTicketOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this show ticket o k response has a 5xx status code
func (o *ShowTicketOK) IsServerError() bool {
	return false
}

// IsCode returns true when this show ticket o k response a status code equal to that given
func (o *ShowTicketOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the show ticket o k response
func (o *ShowTicketOK) Code() int {
	return 200
}

func (o *ShowTicketOK) Error() string {
	return fmt.Sprintf("[GET /oauth/tickets/{ticket_id}][%d] showTicketOK  %+v", 200, o.Payload)
}

func (o *ShowTicketOK) String() string {
	return fmt.Sprintf("[GET /oauth/tickets/{ticket_id}][%d] showTicketOK  %+v", 200, o.Payload)
}

func (o *ShowTicketOK) GetPayload() *models.Ticket {
	return o.Payload
}

func (o *ShowTicketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Ticket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowTicketDefault creates a ShowTicketDefault with default headers values
func NewShowTicketDefault(code int) *ShowTicketDefault {
	return &ShowTicketDefault{
		_statusCode: code,
	}
}

/*
ShowTicketDefault describes a response with status code -1, with default header values.

error
*/
type ShowTicketDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this show ticket default response has a 2xx status code
func (o *ShowTicketDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this show ticket default response has a 3xx status code
func (o *ShowTicketDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this show ticket default response has a 4xx status code
func (o *ShowTicketDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this show ticket default response has a 5xx status code
func (o *ShowTicketDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this show ticket default response a status code equal to that given
func (o *ShowTicketDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the show ticket default response
func (o *ShowTicketDefault) Code() int {
	return o._statusCode
}

func (o *ShowTicketDefault) Error() string {
	return fmt.Sprintf("[GET /oauth/tickets/{ticket_id}][%d] showTicket default  %+v", o._statusCode, o.Payload)
}

func (o *ShowTicketDefault) String() string {
	return fmt.Sprintf("[GET /oauth/tickets/{ticket_id}][%d] showTicket default  %+v", o._statusCode, o.Payload)
}

func (o *ShowTicketDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ShowTicketDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
