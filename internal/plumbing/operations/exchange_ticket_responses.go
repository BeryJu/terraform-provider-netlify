// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netlify/terraform-provider-netlify/internal/models"
)

// ExchangeTicketReader is a Reader for the ExchangeTicket structure.
type ExchangeTicketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExchangeTicketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewExchangeTicketCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewExchangeTicketDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExchangeTicketCreated creates a ExchangeTicketCreated with default headers values
func NewExchangeTicketCreated() *ExchangeTicketCreated {
	return &ExchangeTicketCreated{}
}

/*
ExchangeTicketCreated describes a response with status code 201, with default header values.

ok
*/
type ExchangeTicketCreated struct {
	Payload *models.AccessToken
}

// IsSuccess returns true when this exchange ticket created response has a 2xx status code
func (o *ExchangeTicketCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this exchange ticket created response has a 3xx status code
func (o *ExchangeTicketCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this exchange ticket created response has a 4xx status code
func (o *ExchangeTicketCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this exchange ticket created response has a 5xx status code
func (o *ExchangeTicketCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this exchange ticket created response a status code equal to that given
func (o *ExchangeTicketCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the exchange ticket created response
func (o *ExchangeTicketCreated) Code() int {
	return 201
}

func (o *ExchangeTicketCreated) Error() string {
	return fmt.Sprintf("[POST /oauth/tickets/{ticket_id}/exchange][%d] exchangeTicketCreated  %+v", 201, o.Payload)
}

func (o *ExchangeTicketCreated) String() string {
	return fmt.Sprintf("[POST /oauth/tickets/{ticket_id}/exchange][%d] exchangeTicketCreated  %+v", 201, o.Payload)
}

func (o *ExchangeTicketCreated) GetPayload() *models.AccessToken {
	return o.Payload
}

func (o *ExchangeTicketCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExchangeTicketDefault creates a ExchangeTicketDefault with default headers values
func NewExchangeTicketDefault(code int) *ExchangeTicketDefault {
	return &ExchangeTicketDefault{
		_statusCode: code,
	}
}

/*
ExchangeTicketDefault describes a response with status code -1, with default header values.

error
*/
type ExchangeTicketDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this exchange ticket default response has a 2xx status code
func (o *ExchangeTicketDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this exchange ticket default response has a 3xx status code
func (o *ExchangeTicketDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this exchange ticket default response has a 4xx status code
func (o *ExchangeTicketDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this exchange ticket default response has a 5xx status code
func (o *ExchangeTicketDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this exchange ticket default response a status code equal to that given
func (o *ExchangeTicketDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the exchange ticket default response
func (o *ExchangeTicketDefault) Code() int {
	return o._statusCode
}

func (o *ExchangeTicketDefault) Error() string {
	return fmt.Sprintf("[POST /oauth/tickets/{ticket_id}/exchange][%d] exchangeTicket default  %+v", o._statusCode, o.Payload)
}

func (o *ExchangeTicketDefault) String() string {
	return fmt.Sprintf("[POST /oauth/tickets/{ticket_id}/exchange][%d] exchangeTicket default  %+v", o._statusCode, o.Payload)
}

func (o *ExchangeTicketDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExchangeTicketDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
