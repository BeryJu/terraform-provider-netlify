// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netlify/terraform-provider-netlify/internal/models"
)

// UnlinkSiteRepoReader is a Reader for the UnlinkSiteRepo structure.
type UnlinkSiteRepoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlinkSiteRepoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnlinkSiteRepoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUnlinkSiteRepoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /sites/{site_id}/unlink_repo] unlinkSiteRepo", response, response.Code())
	}
}

// NewUnlinkSiteRepoOK creates a UnlinkSiteRepoOK with default headers values
func NewUnlinkSiteRepoOK() *UnlinkSiteRepoOK {
	return &UnlinkSiteRepoOK{}
}

/*
UnlinkSiteRepoOK describes a response with status code 200, with default header values.

OK
*/
type UnlinkSiteRepoOK struct {
	Payload *models.Site
}

// IsSuccess returns true when this unlink site repo o k response has a 2xx status code
func (o *UnlinkSiteRepoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this unlink site repo o k response has a 3xx status code
func (o *UnlinkSiteRepoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unlink site repo o k response has a 4xx status code
func (o *UnlinkSiteRepoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this unlink site repo o k response has a 5xx status code
func (o *UnlinkSiteRepoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this unlink site repo o k response a status code equal to that given
func (o *UnlinkSiteRepoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the unlink site repo o k response
func (o *UnlinkSiteRepoOK) Code() int {
	return 200
}

func (o *UnlinkSiteRepoOK) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/unlink_repo][%d] unlinkSiteRepoOK  %+v", 200, o.Payload)
}

func (o *UnlinkSiteRepoOK) String() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/unlink_repo][%d] unlinkSiteRepoOK  %+v", 200, o.Payload)
}

func (o *UnlinkSiteRepoOK) GetPayload() *models.Site {
	return o.Payload
}

func (o *UnlinkSiteRepoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Site)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnlinkSiteRepoNotFound creates a UnlinkSiteRepoNotFound with default headers values
func NewUnlinkSiteRepoNotFound() *UnlinkSiteRepoNotFound {
	return &UnlinkSiteRepoNotFound{}
}

/*
UnlinkSiteRepoNotFound describes a response with status code 404, with default header values.

Site not found
*/
type UnlinkSiteRepoNotFound struct {
}

// IsSuccess returns true when this unlink site repo not found response has a 2xx status code
func (o *UnlinkSiteRepoNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this unlink site repo not found response has a 3xx status code
func (o *UnlinkSiteRepoNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this unlink site repo not found response has a 4xx status code
func (o *UnlinkSiteRepoNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this unlink site repo not found response has a 5xx status code
func (o *UnlinkSiteRepoNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this unlink site repo not found response a status code equal to that given
func (o *UnlinkSiteRepoNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the unlink site repo not found response
func (o *UnlinkSiteRepoNotFound) Code() int {
	return 404
}

func (o *UnlinkSiteRepoNotFound) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/unlink_repo][%d] unlinkSiteRepoNotFound ", 404)
}

func (o *UnlinkSiteRepoNotFound) String() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/unlink_repo][%d] unlinkSiteRepoNotFound ", 404)
}

func (o *UnlinkSiteRepoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
